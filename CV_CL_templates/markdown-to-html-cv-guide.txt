# Markdown to HTML CV Conversion Guide

## Overview

This guide outlines the process for converting a Markdown CV into HTML format using an existing template structure. It's particularly useful when tailoring CVs for specific positions and working with large files that need to be broken into manageable chunks.

## Process Workflow

### 1. Analysis Phase

**Source Material Assessment:**
- Review the Markdown CV for structure, content, and key sections
- Analyze the HTML template for styling, component structure, and design elements
- Identify any incomplete sections or files that need completion

**Comparison Analysis:**
```
MD CV Structure:
- Professional Summary
- Experience (chronological)
- Skills
- Education
- Training
- Languages
- References

HTML Template Structure:
- Header (name, title, contact)
- Two-column layout (main and side)
- Experience timeline 
- Skill bars with percentage ratings
- Footer with page numbering
```

### 2. Planning Phase

**Content Organization:**
- First page: Header, professional summary, most relevant experience
- Second page: Additional experience, skills, education, references
- Identify content that should be emphasized for the specific position

**Tailoring Strategy:**
- Highlight experience directly relevant to the target position
- Adjust skill ratings to emphasize required competencies
- Feature relevant training and certifications 
- Emphasize appropriate timeline entries

### 3. Implementation Phase

**File Structure Management:**
- Create separate HTML files for each page
- For large files, create chunks of ~540 lines each
- Maintain consistent styling across all files

**HTML Structure (Basic Template):**
```html
<!doctype html>
<html lang="en">
<head>
    <!-- Meta tags, title, styles, etc. -->
</head>
<body>
    <div class="container">
        <div class="page">
            <!-- Header Section -->
            <header class="header">
                <!-- Name plate and contact info -->
            </header>
            
            <!-- Content Area -->
            <div class="content">
                <!-- Main Column -->
                <div class="main-column">
                    <!-- Professional Summary Section -->
                    <section class="section">
                        <!-- Summary content -->
                    </section>
                    
                    <!-- Experience Section -->
                    <section class="section">
                        <!-- Experience entries -->
                    </section>
                </div>
                
                <!-- Side Column -->
                <div class="side-column">
                    <!-- Timeline, skills, education, etc. -->
                </div>
            </div>
            
            <!-- Footer -->
            <footer class="footer">
                <!-- Footer content and page numbers -->
            </footer>
        </div>
    </div>
</body>
</html>
```

### 4. Content Adaptation Process

**Converting Markdown to HTML Content:**

1. **Professional Summary:**
```html
<section class="section">
    <h3 class="section-title">
        <i data-feather="user"></i>Professional Summary
    </h3>
    <div class="summary-item">
        <p>
            <!-- Converted from MD summary -->
            Seasoned Emergency WASH Expert with 15+ years directing large-scale WASH interventions...
        </p>
    </div>
</section>
```

2. **Experience Entries:**
```html
<div class="experience-item">
    <h4>
        <strong>WASH Delegate</strong>
        <span> | Organization | Location | Timeframe</span>
    </h4>
    <p>
        Project Name | Beneficiaries <br />
        Donors: XXX | Amount
    </p>
    <ul>
        <li>Achievement point 1</li>
        <li>Achievement point 2</li>
    </ul>
    <p>
        <strong>Key Metrics:</strong> Measurable impacts...
    </p>
</div>
```

3. **Skills Section:**
```html
<div class="skill-item">
    <div class="skill-name">
        <span>Skill Name</span>
    </div>
    <div class="skill-bar">
        <div class="skill-level" style="width: 95%"></div>
    </div>
</div>
```

### 5. Tailoring Strategies

**Position-Specific Emphasis:**
- Move relevant experience to the first page
- Highlight related skills with higher percentages
- Feature relevant accomplishments in key metrics
- Mark relevant timeline entries as "featured" class

**Example of Timeline Customization:**
```html
<div class="timeline-entry featured">
    <span class="year">2021</span>
    <div class="entry-content">
        <span class="role">Relevant Role</span>
        <span class="location">Location</span>
    </div>
</div>

<div class="timeline-entry dormant">
    <span class="year">2019</span>
    <div class="entry-content">
        <span class="role">Less Relevant Role</span>
        <span class="location">Location</span>
    </div>
</div>
```

### 6. Technical Considerations

**File Size Management:**
- Keep HTML chunks under 540 lines for easier editing
- Use consistent indentation for better readability
- Maintain element structure across chunks

**Styling Consistency:**
- Preserve all CSS class names from the template
- Maintain consistent header and footer elements
- Ensure page numbering remains functional

**Script Integration:**
```html
<script>
    feather.replace({ width: 14, height: 14 });
</script>
```

### 7. Repository Management

**File Organization:**
- Store completed HTML files in appropriate repository folders
- Use clear file naming conventions
- Include descriptive commit messages

## Practical Tips

1. **Efficient Content Transfer:**
   - Keep both files open side by side
   - Transfer content section by section
   - Verify formatting after each section

2. **Visual Consistency:**
   - Check responsive design across breakpoints
   - Ensure print layout works correctly
   - Verify icon rendering

3. **Content Chunking Strategy:**
   - Break files at logical section boundaries
   - Maintain complete CSS in each file
   - Include all required scripts

4. **Position-Specific Emphasis:**
   - Study the job description carefully
   - Align experience with required qualifications
   - Highlight relevant metrics and achievements

## Technical Specifications

**Recommended Chunk Sizes:**
- HTML head section: ~200 lines
- Content sections: ~300 lines per section
- Maximum chunk size: 540 lines

**Critical Elements to Preserve:**
- Complete CSS styles
- Script references
- Page numbering logic
- Responsive design elements

## Conclusion

This methodical approach ensures efficient conversion of Markdown CVs to HTML format while maintaining visual consistency and emphasizing relevant experience. By breaking the process into manageable chunks and following structured implementation steps, you can create professional, tailored CVs for specific positions.
